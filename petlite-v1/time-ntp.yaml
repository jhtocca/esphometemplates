time:
  - platform: sntp
    id: sntp_time
    timezone: America/Mexico_City
    servers:
      - 0.pool.ntp.org
      - 1.pool.ntp.org
      - 2.pool.ntp.org
    on_time:
      - seconds: /5
        then:
        - if:
            condition:
              time.has_time:
            then:
              - logger.log:
                  format: "Time has been set and is valid!"
                  level: INFO
              - script.execute: time_loop

text_sensor:
  - platform: template
    name: "Current Time"
    entity_category: "diagnostic"
    icon: "mdi:clock-time-eight"
    lambda: |-
      return id(sntp_time).now().strftime("%A, %B %d %Y %I:%M %p");


script:
  id: time_loop
  mode: single
  then:
    - logger.log:
        format: "Script is being called"
        level: INFO
    - lambda: |-
        LightState* ls_sleep = id(sleep_light);
        LightState* ls_output = id(light_strip);

        LightColorValues cv_current_sleep = ls_sleep->remote_values;

        //float r = cv_current_sleep.get_red();
        //int x = 22;
        //ESP_LOGI("main", "Current r: %f", r);

        //LightColorValues sleep_color_last = id(sleep_last_color);

        //ESP_LOGI("main", "Current r: %f", sleep_color_current.get_red());

        if (!id(sleep_last_color)) {
          id(sleep_last_color) = new LightColorValues(
            esphome::light::ColorMode::RGB,
            cv_current_sleep.get_state(),
            cv_current_sleep.get_brightness(),
            cv_current_sleep.get_color_brightness(),
            cv_current_sleep.get_red(),
            cv_current_sleep.get_green(),
            cv_current_sleep.get_blue(),
            cv_current_sleep.get_white(),
            cv_current_sleep.get_color_temperature(),
            cv_current_sleep.get_cold_white(),
            cv_current_sleep.get_warm_white());
        }

        ESP_LOGI("main", "Current r: %f g: %f b: %f h: %f s: %f",
          cv_current_sleep.get_red(),
          cv_current_sleep.get_green(),
          cv_current_sleep.get_blue(),
          cv_current_sleep.get_brightness(),
          cv_current_sleep.get_state());

        ESP_LOGI("main", "Saved r: %f g: %f b: %f h: %f s: %f",
          id(sleep_last_color)->get_red(),
          id(sleep_last_color)->get_green(),
          id(sleep_last_color)->get_blue(),
          id(sleep_last_color)->get_brightness(),
          id(sleep_last_color)->get_state());

        //if (*sleep_color_current != *sleep_color_last) {
        //  output_light->make_call().from_light_color_values(sleep_color_current).perform();
        //  id(sleep_last_color) = *sleep_color_current;
        //}

